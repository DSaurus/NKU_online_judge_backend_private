const express = require('express')
const app = express()

const api = require('./api')
const bodyParser = require('body-parser')
const client = require('redis').createClient(6379,'192.168.233.128',{})
const {DB_SESSION_STORE} = require('./config/redis')
const logger = require('morgan')
const session = require('express-session')
const RedisStore = require('connect-redis')(session)
const path = require('path')
const prototype = require('./lib/prototype')

// Disable Header 'X-Powered-By' added by express.
app.disable('x-powered-by')

// DEV: request logger
app.use(logger('dev'))

// DEV: PPT JSON
app.set('json spaces', 4)

app.use(session({
  name: 'oj.sid',
  // DEV: change in production
  secret: 'not production',
  resave: false,
  saveUninitialized: false,
  unset: 'destroy',
  cookie: {maxAge: 36000000},
  store: new RedisStore({
    client: client,
    db: DB_SESSION_STORE,
    logErrors: true
  })
}))

// DEV: Added when debugging from localhost or other server
app.use(function (req, res, next) {
  res.set('Access-Control-Allow-Credentials', 'true')
  res.set('Access-Control-Allow-Origin', req.headers.origin || '*')
  res.set('Access-Control-Allow-Headers', 'Content-Type')
  res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE')
  next()
})

app.use(express.static(path.join(__dirname, 'public')))

// Catch internal error
app.use((err, req, res, next) => {
  'use strict'
  if (err instanceof Error)
    res.fatal(500, err)
  else
    next()
})

app.use(bodyParser.json({limit: '233kb'}))

// Catch error generated by bodyParser (Usually size limit exceeded)
app.use((err, req, res, next) => {
  'use strict'
  if (err instanceof Error)
    res.fatal(err.status, err)
  else next()
})

// This defaults to 100kb
app.use(bodyParser.urlencoded({extended: false}))

app.use(prototype.setResponsePrototype)

// Dispatch to router
app.use('/api', api)

// Catch all other request
app.all(/^.+$/, (req, res) => {
  res.fatal(501)
})

module.exports = app
